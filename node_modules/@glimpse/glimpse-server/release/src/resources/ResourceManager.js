"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _ = require("lodash");
var UriTemplate_1 = require("./UriTemplate");
var ResourceManager = (function () {
    function ResourceManager() {
        this.resourceTable = {};
    }
    ResourceManager.prototype.getStartingSegment = function (path) {
        var startingSegment = '';
        var remaining = '';
        var firstSlash = path.indexOf('/', 1);
        if (firstSlash > 0) {
            startingSegment = path.substring(1, firstSlash);
            remaining = path.substring(firstSlash, path.length);
        }
        else {
            startingSegment = path.substring(1, path.length);
            remaining = '/';
        }
        return {
            segment: startingSegment,
            remaining: remaining
        };
    };
    Object.defineProperty(ResourceManager.prototype, "resources", {
        get: function () {
            return _.values(this.resourceTable);
        },
        enumerable: true,
        configurable: true
    });
    ResourceManager.prototype.getUriTemplates = function (baseUri) {
        var resources = _(this.resources)
            .filter(function (resource) { return resource.templateName !== undefined; })
            .reduce(function (result, resource) {
            result[resource.templateName] = UriTemplate_1.UriTemplate.fromResource(baseUri, resource);
            return result;
        }, {});
        return resources;
    };
    ResourceManager.prototype.register = function (resource) {
        this.resourceTable[resource.name] = resource;
    };
    ResourceManager.prototype.match = function (req) {
        var startingSegment = this.getStartingSegment(req.url);
        if (startingSegment.segment) {
            var resource = this.resourceTable[startingSegment.segment];
            if (resource) {
                // change the url to be inline with the behavior of a app.use
                req.url = startingSegment.remaining;
                var parameters = undefined; // TODO: need to pull out this part
                return {
                    parameters: parameters,
                    resource: resource
                };
            }
        }
        return undefined;
    };
    return ResourceManager;
}());
exports.ResourceManager = ResourceManager;

//# sourceMappingURL=../../../maps/src/resources/ResourceManager.js.map
