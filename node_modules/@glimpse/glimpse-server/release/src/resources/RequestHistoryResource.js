'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var MessageUtilities_1 = require("../messaging/MessageUtilities");
var moment = require("moment");
var Resource = (function () {
    function Resource(server) {
        this.name = 'request-history';
        this.uriTemplate = '{?dmin,dmax,url,methods,smin,smax,tags,before,userId,types}';
        this.type = 'client';
        if (server) {
            this.init(server.providers.messageQuery);
        }
    }
    Resource.prototype.init = function (messageQuery) {
        this.messageQuery = messageQuery;
    };
    Resource.prototype.invoke = function (req, res) {
        var filters = {};
        var types = undefined;
        if (req.query) {
            if (req.query.dmin) {
                filters.durationMinimum = parseInt(req.query.dmin, 10);
            }
            if (req.query.dmax) {
                filters.durationMaximum = parseInt(req.query.dmax, 10);
            }
            if (req.query.url) {
                filters.urlContains = req.query.url;
            }
            if (req.query.methods) {
                filters.methodList = req.query.methods.split(',');
            }
            if (req.query.smin) {
                filters.statusCodeMinimum = parseInt(req.query.smin, 10);
            }
            if (req.query.smax) {
                filters.statusCodeMaximum = parseInt(req.query.smax, 10);
            }
            if (req.query.tags) {
                filters.tagList = req.query.tags.split(',');
            }
            if (req.query.before) {
                filters.requestTimeBefore = moment(req.query.before);
            }
            if (req.query.userId) {
                filters.userId = req.query.userId;
            }
            if (req.query.types) {
                types = req.query.types.split(',');
            }
        }
        var messages = this.messageQuery.queryRequests(filters, types);
        var payloads = MessageUtilities_1.MessageUtilities.toPayloadJson(messages);
        res.status(200);
        res.type('application/json');
        res.send(payloads);
    };
    ;
    return Resource;
}());
exports.Resource = Resource;

//# sourceMappingURL=../../../maps/src/resources/RequestHistoryResource.js.map
