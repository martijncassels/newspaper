"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ContextManagerProvider_1 = require("../messaging/ContextManagerProvider");
/**
 * This is a wrapper over the telemetry service that will strip out the glimpse request context before
 * sending any telemetry events.  We do this here in the agent because the TelemetryService is defined in
 * the @glimpse/glimpse-common package, while the context management logic is defined in @glimpse/glimpse-agent-node.
 */
var NoContextTelemetryService = (function () {
    function NoContextTelemetryService(telemetryService) {
        this.wrappedTelemetryService = telemetryService;
    }
    NoContextTelemetryService.prototype.isEnabled = function () {
        return this.wrappedTelemetryService.isEnabled();
    };
    NoContextTelemetryService.prototype.getSessionId = function () {
        return this.wrappedTelemetryService.getSessionId();
    };
    // tslint:disable-next-line:no-any
    NoContextTelemetryService.prototype.sendEvent = function (eventName, properties, measurements) {
        var _this = this;
        var contextManager = ContextManagerProvider_1.ContextManagerProvider.getContextManager();
        contextManager.runInNullContext(function (context) {
            return _this.wrappedTelemetryService.sendEvent(eventName, properties, measurements);
        });
    };
    return NoContextTelemetryService;
}());
exports.NoContextTelemetryService = NoContextTelemetryService;

//# sourceMappingURL=../../maps/util/NoContextTelemetryService.js.map
