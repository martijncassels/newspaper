'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
var HttpHelper_1 = require("../util/HttpHelper");
var os = require("os");
var EnvironmentInspector = (function () {
    function EnvironmentInspector() {
    }
    EnvironmentInspector.prototype.requestStart = function (req, res, requestStartTime) {
        // no-op
    };
    //tslint:disable-next-line:no-any
    EnvironmentInspector.prototype.requestEnd = function (req, res, content, size, requestStartTime) {
        var context = HttpHelper_1.HttpHelper.getContext(req);
        if (context) {
            var currentMoment = requestStartTime.getMoment();
            this.agent.broker.createAndSendMessage({
                serverName: os.hostname(),
                serverTime: requestStartTime.format(false),
                serverTimezoneOffset: requestStartTime.getUTCOffset(true),
                serverDaylightSavingTime: currentMoment.isDST(),
                serverOperatingSystem: os.type(),
                runtimeVersion: process.version,
                runtimeArchitecture: os.arch()
            }, ['environment'], undefined, context);
        }
    };
    EnvironmentInspector.prototype.responseStart = function (req, res, responseStartTime) {
        // TODO: Remove once http-proxy allows for removal.
    };
    // tslint:disable-next-line:no-any
    EnvironmentInspector.prototype.responseEnd = function (req, res, content, size, responseStartTime) {
        // TODO: Remove once http-proxy allows for removal.
    };
    EnvironmentInspector.prototype.init = function (agent) {
        this.agent = agent;
    };
    return EnvironmentInspector;
}());
exports.EnvironmentInspector = EnvironmentInspector;

//# sourceMappingURL=../../maps/inspectors/EnvironmentInspector.js.map
