import { IAgentBroker } from '../../messaging/IAgentBroker';
import { ITransmittableMessage } from '../../messaging/IMessage';
import { IMessageConverter } from '../../messaging/IMessageConverter';
import { IContext } from '../../messaging/IContextManager';
export interface IMessageComponents {
    data: any;
    types: string[];
    indices?: {
        [key: string]: any;
    };
    context?: Object;
    ordinal: number;
}
export declare class MockAgentBroker implements IAgentBroker {
    private messages;
    private messageConverter;
    constructor(messages: IMessageComponents[], messageConverter: IMessageConverter);
    createAndSendMessage(data: Object, types: string[], indices: {
        [key: string]: any;
    }, context: IContext): void;
    sendMessage(message: ITransmittableMessage): void;
}
