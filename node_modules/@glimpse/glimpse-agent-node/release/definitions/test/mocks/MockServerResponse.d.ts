/// <reference types="node" />
import * as http from 'http';
import * as stream from 'stream';
import { IContext } from './../../messaging/IContextManager';
export declare class MockServerResponse extends stream.Writable implements http.ServerResponse {
    constructor(context?: IContext);
    write(b: Buffer | string | any, encOrCallback?: Function | string, cbOrFd?: Function | string): boolean;
    writeContinue(): void;
    writeHead(statusCode: number, reasonPhrase?: string | any, headers?: any): void;
    statusCode: number;
    statusMessage: string;
    headersSent: boolean;
    setTimeout(msecs: number, callback: Function): http.ServerResponse;
    sendDate: boolean;
    getHeader(name: string): string;
    removeHeader(name: string): void;
    finished: boolean;
    end(): void;
    headers: {};
    trailers: {};
    setHeader(name: string, values: string | string[] | number): void;
    addTrailers(headers: {
        [key: string]: string | number;
    }): void;
    writable: any;
}
