import { IErrorReportingService } from '@glimpse/glimpse-common';
import { IAgent } from '../IAgent';
import { IServerRequestInspector } from './IServerRequestInspector';
import { ProxyBase } from './ProxyBase';
export declare class HttpProxy extends ProxyBase {
    private inspectors;
    private proxiedModules;
    private agent;
    private errorReportingService;
    readonly moduleName: string;
    readonly forceLoadModule: boolean;
    private raiseRequestStartEvent(req, res, requestStartTime);
    private raiseRequestEndEvent(req, res, content, size, requestStartTime, multiPartSummaries);
    private raiseResponseStartEvent(req, res, responseStartTime);
    private raiseResponseEndEvent(req, res, content, size, responseStartTime);
    private getCurrentTimeStamp();
    private patchCreateServer(agent, httpModule);
    private setupServerProxy(agent, cb);
    private setupInspectorExtensions(agent);
    addServerInspector(inspector: IServerRequestInspector): void;
    init(agent: IAgent, httpModule: any, resolvedModulePath: string, errorReportingService: IErrorReportingService): any;
}
