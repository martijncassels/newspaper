import { IDeferredInitializationCallback, IDeferredInitializationManager, IDeferredInitializationRegisteredCallback } from './IDeferredInitializationManager';
/**
 * A component for managing deferred, asynchronous initialization.
 */
export declare class DeferredInitializationManager implements IDeferredInitializationManager {
    private err;
    private registered;
    private state;
    private waiters;
    /**
     * Called when deferred initialization should be performed.
     *
     * NOTE: This should ideally be called once, prior to the first request being received.
     *
     * @param done A callback called when initialization is complete.
     */
    init(done: IDeferredInitializationCallback): void;
    /**
     * Register a callback to be invoked when deferred initialization is to be performed.
     *
     * @param init The callback to be invoked during initialization.
     */
    onInit(init: IDeferredInitializationRegisteredCallback): void;
    private performInitialization();
    private completeInitialization(err);
}
export default DeferredInitializationManager;
