/// <reference types="node" />
import * as http from 'http';
import { IContext, IRunInContextCallback, IContextManager } from './IContextManager';
import { IErrorReportingService } from '@glimpse/glimpse-common';
import { IAgentProviders } from './../IAgent';
export declare class ContextManagerBase implements IContextManager {
    private errorReportingService;
    private dateTimeService;
    init(): void;
    createContext(req: http.IncomingMessage): IContext;
    isWithinContext(): boolean;
    currentContext(): IContext;
    runInContext(context: IContext, callback: IRunInContextCallback): void;
    runInNewContext(req: http.IncomingMessage, callback: IRunInContextCallback): void;
    runInNullContext(callback: IRunInContextCallback): void;
    wrapInCurrentContext(callback: IRunInContextCallback): IRunInContextCallback;
    checkContextID(location: string, expectedContextID?: string): void;
    setServices(service: IAgentProviders): void;
    getErrorReportingService(): IErrorReportingService;
}
