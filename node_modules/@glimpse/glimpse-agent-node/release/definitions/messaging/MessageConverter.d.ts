import { IContext } from './IContextManager';
import { IMessage } from './IMessage';
import { IDateTime } from './../configuration/IDateTime';
import { IMessageConverter } from './IMessageConverter';
export declare class MessageConverter implements IMessageConverter {
    private dateTimeService;
    private static i;
    constructor(dateTimeService: IDateTime);
    createMessage<T>(data: T, types: string[], indices: Object, context: IContext): IMessage<string>;
    transformMessageForTransit<T>(message: IMessage<T>, data: any): IMessage<string>;
    createMessageEnvelope<T>(types: string[], indices: Object, context: IContext): IMessage<T>;
}
