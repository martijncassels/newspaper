/// <reference types="node" />
import * as http from 'http';
import { DateTimeValue } from './../configuration/DateTimeValue';
import { IAgentProviders } from './../IAgent';
import { IErrorReportingService } from '@glimpse/glimpse-common';
export interface IRunInContextCallback {
    (context: IContext): any;
}
export interface IWrappedCallback {
    (...params: any[]): any;
}
export interface IContext {
    id: string;
    type: string;
    startTime: DateTimeValue;
    req: http.IncomingMessage;
}
export interface IContextManager {
    createContext(req: http.IncomingMessage): IContext;
    currentContext(): IContext;
    isWithinContext(): boolean;
    runInContext(context: IContext, callback: IRunInContextCallback): any;
    runInNewContext(req: http.IncomingMessage, callback: IRunInContextCallback): any;
    runInNullContext(callback: IRunInContextCallback): any;
    wrapInCurrentContext(callback: IWrappedCallback): IWrappedCallback;
    checkContextID(location: string, expectedContextID?: string): any;
    setServices(services: IAgentProviders): any;
    getErrorReportingService(): IErrorReportingService;
}
